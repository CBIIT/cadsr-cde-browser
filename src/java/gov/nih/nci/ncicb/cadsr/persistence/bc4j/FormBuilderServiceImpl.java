package gov.nih.nci.ncicb.cadsr.persistence.bc4j;

import gov.nih.nci.ncicb.cadsr.dto.bc4j.*;
import gov.nih.nci.ncicb.cadsr.resource.*;

import oracle.jbo.Row;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewLinkImpl;

import java.sql.CallableStatement;
import java.sql.Types;


//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
public class FormBuilderServiceImpl extends ApplicationModuleImpl {
  /**
   * This is the default constructor (do not remove)
   */
  public FormBuilderServiceImpl() {
  }

  /**
   * Container's getter for QuestContentsExtView
   */
  public QuestContentsExtViewImpl getQuestContentsExtView() {
    return (QuestContentsExtViewImpl) findViewObject("QuestContentsExtView");
  }

  /**
   * Container's getter for FormsView
   */
  public FormsViewImpl getFormsView() {
    return (FormsViewImpl) findViewObject("FormsView");
  }

  /**
   * Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args) {
    launchTester(
      "gov.nih.nci.ncicb.cadsr.persistence.bc4j", "FormBuilderServiceLocal");
  }

  /**
   * Container's getter for ModulesView1
   */
  public ModulesViewImpl getModulesView1() {
    return (ModulesViewImpl) findViewObject("ModulesView1");
  }

  /**
   * Container's getter for ModulesView
   */
  public ModulesViewImpl getModulesView() {
    return (ModulesViewImpl) findViewObject("ModulesView");
  }

  /**
   * Container's getter for ModuleFormLink1
   */
  public ViewLinkImpl getModuleFormLink1() {
    return (ViewLinkImpl) findViewLink("ModuleFormLink1");
  }

  /**
   * Container's getter for QcRecsExtView
   */
  public QcRecsExtViewImpl getQcRecsExtView() {
    return (QcRecsExtViewImpl) findViewObject("QcRecsExtView");
  }

  /**
   * Container's getter for QuestionsView
   */
  public QuestionsViewImpl getQuestionsView() {
    return (QuestionsViewImpl) findViewObject("QuestionsView");
  }

  /**
   * Container's getter for QuestionsView1
   */
  public QuestionsViewImpl getQuestionsView1() {
    return (QuestionsViewImpl) findViewObject("QuestionsView1");
  }

  /**
   * Container's getter for QuestionModuleLink1
   */
  public ViewLinkImpl getQuestionModuleLink1() {
    return (ViewLinkImpl) findViewLink("QuestionModuleLink1");
  }

  /**
   * Container's getter for FormModuleRelView
   */
  public FormModuleRelViewImpl getFormModuleRelView() {
    return (FormModuleRelViewImpl) findViewObject("FormModuleRelView");
  }

  /**
   * Container's getter for FormModuleRelView1
   */
  public FormModuleRelViewImpl getFormModuleRelView1() {
    return (FormModuleRelViewImpl) findViewObject("FormModuleRelView1");
  }

  /**
   * Container's getter for ModuleFormRelLink1
   */
  public ViewLinkImpl getModuleFormRelLink1() {
    return (ViewLinkImpl) findViewLink("ModuleFormRelLink1");
  }

  /**
   * Container's getter for ModuleQuestionRecsView
   */
  public ModuleQuestionRecsViewImpl getModuleQuestionRecsView() {
    return (ModuleQuestionRecsViewImpl) findViewObject(
      "ModuleQuestionRecsView");
  }

  /**
   * Container's getter for ModuleQuestionRecsView1
   */
  public ModuleQuestionRecsViewImpl getModuleQuestionRecsView1() {
    return (ModuleQuestionRecsViewImpl) findViewObject(
      "ModuleQuestionRecsView1");
  }

  /**
   * Container's getter for ModuleQuestionRecLink1
   */
  public ViewLinkImpl getModuleQuestionRecLink1() {
    return (ViewLinkImpl) findViewLink("ModuleQuestionRecLink1");
  }

  /**
   * Custom Method
   */
  public Form findFormByPK(String pk) throws Exception {
    FormsViewImpl formsView = this.getFormsView();
    formsView.setWhereClause("QC_IDSEQ ='" + pk + "'");
    formsView.executeQuery();

    FormsViewRowImpl formRow = (FormsViewRowImpl) formsView.first();
    Form formTO = new BC4JFormTransferObject(formRow);

    return formTO;
  }

  /**
   * Custom Method
   */
  public Module findModuleByPK(String pk) throws Exception {
    ModulesViewImpl modulesView = this.getModulesView();
    modulesView.setWhereClause("QC_IDSEQ ='" + pk + "'");
    modulesView.executeQuery();

    ModulesViewRowImpl modRow = (ModulesViewRowImpl) modulesView.first();
    Module moduleTO = new BC4JModuleTransferObject(modRow);

    return moduleTO;
  }

  /**
   * Custom Method
   */
  public void updateModule(Module mod) throws Exception {
    ModulesViewImpl modulesView = this.getModulesView();
    ModulesViewRowImpl modRow = (ModulesViewRowImpl) modulesView.first();
    modRow.setAslName(mod.getAslName());
    modRow.setConteIdseq(mod.getConteIdseq());
    modRow.setLongName(mod.getLongName());
    modRow.setPreferredName(mod.getPreferredName());
    modRow.setPreferredDefinition(mod.getPreferredDefinition());

    //modRow.setVersion();
    this.getTransaction().commit();
    modulesView.executeQuery();
  }

  /**
   * Custom Method
   */
  public String copyForm(Form sourceForm, Form targetForm)
    throws Exception {
    DBTransaction tr = getDBTransaction();
    String stmt =
      "BEGIN sbrext.sbrext_form_builder_pkg.copy_crf(?,?,?,?,?,?,?,?,?,?,?,?); END;";
    CallableStatement st =
      tr.createCallableStatement(stmt, DBTransaction.DEFAULT);
    st.registerOutParameter(10, Types.VARCHAR);
    st.registerOutParameter(11, Types.VARCHAR);
    st.registerOutParameter(12, Types.VARCHAR);
    st.setString(1, sourceForm.getFormIdseq());
    st.setString(2, targetForm.getVersion().toString());
    st.setString(3, targetForm.getPreferredName());
    st.setString(4, targetForm.getLongName());
    st.setString(5, targetForm.getPreferredDefinition());
    st.setString(6, targetForm.getConteIdseq());
    st.setString(7, targetForm.getProtoIdseq());
    st.setString(8, targetForm.getAslName());
    st.setString(9, "SBR");

    boolean val = st.execute();
    String newFrmIdseq = st.getString(10);

    if (newFrmIdseq == null) {
      throw new Exception(
        "Exception caught in copy form " + st.getString(11) + " : " +
        st.getString(12));
    }

    return newFrmIdseq;
  }

  /**
   * Container's getter for FormValidValuesView
   */
  public FormValidValuesViewImpl getFormValidValuesView() {
    return (FormValidValuesViewImpl) findViewObject("FormValidValuesView");
  }

  /**
   * Container's getter for FormValidValuesView1
   */
  public FormValidValuesViewImpl getFormValidValuesView1() {
    return (FormValidValuesViewImpl) findViewObject("FormValidValuesView1");
  }

  /**
   * Container's getter for FormVVQuestionLink1
   */
  public ViewLinkImpl getFormVVQuestionLink1() {
    return (ViewLinkImpl) findViewLink("FormVVQuestionLink1");
  }

  /**
   * Container's getter for QuestionFormVVRecsView
   */
  public QuestionFormVVRecsViewImpl getQuestionFormVVRecsView() {
    return (QuestionFormVVRecsViewImpl) findViewObject(
      "QuestionFormVVRecsView");
  }

  /**
   * Container's getter for QuestionFormVVRecsView1
   */
  public QuestionFormVVRecsViewImpl getQuestionFormVVRecsView1() {
    return (QuestionFormVVRecsViewImpl) findViewObject(
      "QuestionFormVVRecsView1");
  }

  /**
   * Container's getter for FormVVQuesRecsLink1
   */
  public ViewLinkImpl getFormVVQuesRecsLink1() {
    return (ViewLinkImpl) findViewLink("FormVVQuesRecsLink1");
  }

  /**
   * Container's getter for ContextsView
   */
  public ContextsViewImpl getContextsView() {
    return (ContextsViewImpl) findViewObject("ContextsView");
  }

  /**
   * Container's getter for ContextsView1
   */
  public ContextsViewImpl getContextsView1() {
    return (ContextsViewImpl) findViewObject("ContextsView1");
  }

  /**
   * Container's getter for formConteFkLink1
   */
  public ViewLinkImpl getformConteFkLink1() {
    return (ViewLinkImpl) findViewLink("formConteFkLink1");
  }

  /**
   * Container's getter for ContextsView2
   */
  public ContextsViewImpl getContextsView2() {
    return (ContextsViewImpl) findViewObject("ContextsView2");
  }

  /**
   * Container's getter for moduleConteFkLink1
   */
  public ViewLinkImpl getmoduleConteFkLink1() {
    return (ViewLinkImpl) findViewLink("moduleConteFkLink1");
  }

  /**
   * Container's getter for ContextsView3
   */
  public ContextsViewImpl getContextsView3() {
    return (ContextsViewImpl) findViewObject("ContextsView3");
  }

  /**
   * Container's getter for QuestionConteFkLink1
   */
  public ViewLinkImpl getQuestionConteFkLink1() {
    return (ViewLinkImpl) findViewLink("QuestionConteFkLink1");
  }

  /**
   * Container's getter for ContextsView4
   */
  public ContextsViewImpl getContextsView4() {
    return (ContextsViewImpl) findViewObject("ContextsView4");
  }

  /**
   * Container's getter for FormValueContextFkLink1
   */
  public ViewLinkImpl getFormValueContextFkLink1() {
    return (ViewLinkImpl) findViewLink("FormValueContextFkLink1");
  }

  /**
   * Container's getter for ProtocolsView
   */
  public ProtocolsViewImpl getProtocolsView() {
    return (ProtocolsViewImpl) findViewObject("ProtocolsView");
  }

  /**
   * Container's getter for FormsView1
   */
  public FormsViewImpl getFormsView1() {
    return (FormsViewImpl) findViewObject("FormsView1");
  }

  /**
   * Container's getter for ProtocolsView1
   */
  public ProtocolsViewImpl getProtocolsView1() {
    return (ProtocolsViewImpl) findViewObject("ProtocolsView1");
  }

  /**
   * Container's getter for FormProtocolFkLink1
   */
  public ViewLinkImpl getFormProtocolFkLink1() {
    return (ViewLinkImpl) findViewLink("FormProtocolFkLink1");
  }

  /**
   * Container's getter for FormProtocolFkLink2
   */
  public ViewLinkImpl getFormProtocolFkLink2() {
    return (ViewLinkImpl) findViewLink("FormProtocolFkLink2");
  }
}
